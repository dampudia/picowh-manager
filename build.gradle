plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'maven-publish'
}

group = 'net.fag.picowh'
version = '0.1.0'

java {
	sourceCompatibility = '17'
    targetCompatibility = '17'
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom 'org.apache.logging.log4j:log4j-bom:2.20.0'
  }
}
configurations.implementation {
     exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'  
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework:spring-web'
	implementation 'org.springframework.data:spring-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.apache.logging.log4j:log4j-api'
	
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.apache.logging.log4j:log4j-core'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/dampudia/picowh-manager")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("PUBLISH_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact bootJar
        }
    }
}

